/* 
Exmaple class Rectangle
	class Rectangle {
		public int x1,y1,x2,y2
	}
*/

/* ตัวอย่างรูป 4 เหลี่ยม และจุด (x1,y1), (x2,y2)
											Rect1(x2,y2)
					|-------------|
					|-------------|
					|-------------|
					|-------------|
					|-------------|
					|-------------|
				Rect1(x1,y1)

											Rect2(x2,y2)
					|-------------|
					|-------------|
					|-------------|
					|-------------|
					|-------------|
					|-------------|
				Rect2(x1,y1)
*/

function isOverlap(rectangle1, rectangle2) {
  /* จะเกิดกรณีที่สี่เหลี่ยมไม่ overlap ได้ทั้งหมด 4 กรณี ได้แก่
		1. สี่เหลี่ยมรูปที่ 1 อยู่ทางขวาของสี่เหลี่ยมรูปที่ 2
		2. สี่เหลี่ยมรูปที่ 1 อยู่ทางซ้ายของสี่เหลี่ยมรูปที่ 2
		3. สี่เหลี่ยมรูปที่ 1 อยู่ด้านบนของสี่เหลี่ยมรูปที่ 2
		4. สี่เหลี่ยมรูปที่ 1 อยู่ด้านล่างของสี่เหลี่ยมรูปที่ 2
	*/

  // ตรวจสอบในแนวแกน x ว่ารูปสี่เหลี่ยม มีการซ้อนทับหรือคาบเกี่ยวกันหรือไม่ ?
  // ตรวจสอบกรณีสี่เหลี่ยมรูปที่ 1 อยู่ทางขวาของสี่เหลี่ยมรูปที่ 2
  if (rectangle1.x1 >= rectangle2.x2) {
    return false;
  }
  // ตรวจสอบกรณีสี่เหลี่ยมรูปที่ 1 อยู่ทางซ้ายของสี่เหลี่ยมรูปที่ 2
  if (rectangle1.x2 <= rectangle2.x1) {
    return false;
  }

  /* 
		หากไม่เข้า 2 เงื่อนไขด้านบน แสดงว่ารูปสี่เหลี่ม 2 รูปมี จุดที่ x ที่คาบเกี่ยวกันอยู่ 
		จึงต้องมาเช็คแนวแกน y ว่ารูปสี่เหลี่ยม มีการซ้อนทับกันหรือไม่ ? 
	*/
  // ตรวจสอบกรณีสี่เหลี่ยมรูปที่ 1 อยู่ด้านบนของสี่เหลี่ยมรูปที่ 2
  if (rectangle1.y1 >= rectangle2.y2) {
    return false;
  }

  // ตรวจสอบกรณีสี่เหลี่ยมรูปที่ 1 อยู่ด้านล่างของสี่เหลี่ยมรูปที่ 2
  if (rectangle1.y2 <= rectangle2.y1) {
    return false;
  }

  // หากไม่เข้าเงื่อนไขใดเลย แสดงว่ารูปสี่เหลี่ยมมีส่วนใดส่วนหนึ่งที่ซ้อนทับกัน
  return true;
}

// test
let rectangle_set = [
  {
    // rectangle 1
    x1: 1,
    y1: 1,
    x2: 3,
    y2: 3,
  },
  {
    // rectangle 2
    x1: 2,
    y1: 2,
    x2: 6,
    y2: 6,
  },
];

console.log("---Test result---");
if (isOverlap(rectangle_set[0], rectangle_set[1])) {
  console.log("Overlap");
} else {
  console.log("Not overlap");
}
console.log("-----------------");
